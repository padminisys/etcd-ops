# values-override-min.yaml

# 1) Do NOT install the bundled etcd; use your existing one over mTLS
etcd:
  enabled: false
  auth:
    tls:
      enabled: true
      existingSecret: etcd-client-apisix   # has tls.crt/tls.key/ca.crt
      certFilename: tls.crt
      certKeyFilename: tls.key
      verify: true
      # IMPORTANT: this must be a DNS name present on the etcd **server** certificate
      sni: "etcd.padmini.systems"

externalEtcd:
  host:
    - "https://etcd-client.apisix.svc.cluster.local:2379"
  user: ""       # no basic auth (mTLS instead)
  password: ""

# 2) APISIX secure defaults
apisix:
  enableHTTP2: true
  enableServerTokens: false

  # Mount the CA so APISIX can verify etcd's server certificate
  ssl:
    enabled: true
    existingCASecret: "etcd-client-apisix" # uses ca.crt from this secret
    certCAFilename: "ca.crt"
    sslProtocols: "TLSv1.2 TLSv1.3"

  deployment:
    mode: traditional
    role: traditional
    role_traditional:
      config_provider: etcd

  admin:
    enabled: true
    enable_admin_ui: true
    type: ClusterIP
    credentials:
      secretName: apisix-admin-credentials
    allow:
      ipList:
        - 10.0.0.0/8
        - 172.16.0.0/12
        - 192.168.0.0/16
        - 127.0.0.0/8
    ingress:
      enabled: true
      className: nginx
      annotations:
        argocd.argoproj.io/sync-wave: "1"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/proxy-set-headers: "apisix/apisix-admin-proxy-headers"
        nginx.ingress.kubernetes.io/app-root: /ui/
      hosts:
        - host: apisix-admin.padmini.systems
          paths:
            - /ui
            - /
            - /apisix/admin
        - host: apisix.padmini.systems
          paths:
            - /apisix/admin
      tls:
        - secretName: apisix-admin-tls
          hosts:
            - apisix-admin.padmini.systems
        - secretName: apisix-tls
          hosts:
            - apisix.padmini.systems

service:
  type: ClusterIP
  externalTrafficPolicy: ""
  http:
    enabled: true

extraDeploy:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: apisix-admin-proxy-headers
      namespace: apisix
      annotations:
        argocd.argoproj.io/sync-wave: "-1"   # create before Ingress
    data:
      X-Forwarded-Proto: "https"
      X-Forwarded-Port: "443"
